Top 12 𝗞𝘂𝗯𝗲𝗿𝗻𝗲𝘁𝗲𝘀 (𝗞𝟴𝘀) short names used by #devops
 
👉 𝗡𝗼𝗱𝗲: A Node is a Kubernetes cluster's worker computer. Either a physical or virtual machine may be used. The operating and management of the pods is done by the nodes.
✔  kubectl get no

👉 𝗡𝗮𝗺𝗲𝘀𝗽𝗮𝗰𝗲: The cluster resources can be split up into virtual clusters using namespaces. It gives names a range and enables many teams or projects to share the same physical cluster while isolating their resources.
✔  kubectl get ns

👉 Deployment : simplifies the process of managing and controlling the lifecycle of applications in a Kubernetes cluster, making it easier to deploy and update applications with minimal downtime and manual intervention.
✔  kubectl get deploy

👉 𝗥𝗲𝗽𝗹𝗶𝗰𝗮𝗦𝗲𝘁: ReplicaSets are Kubernetes objects that guarantee a certain number of pod replicas are always active. Scaling and managing the number of pods for a certain application are done using it.
✔  kubectl get rs

👉 Ingress: in Kubernetes is an API object that serves as an entry point for external traffic into the cluster, acting as a layer between the external world and the services running inside.
✔  kubectl get ing

👉 𝗦𝗲𝗿𝘃𝗶𝗰𝗲: A logical set of pods and a policy for accessing them are defined by a service, which is an abstraction. For the pods behind it, it offers a reliable network endpoint (IP address) and load balancing.
✔  kubectl get svc

👉 𝗣𝗼𝗱: A Pod is the smallest and most basic unit in Kubernetes. It represents a single instance of a running process or a set of tightly coupled processes running together on a node. Pods are scheduled and managed by Kubernetes.
✔  kubectl get po

👉 Network policies: in Kubernetes are a set of rules that control the traffic flow between pods within a cluster. Network policies enhance security and provide granular control over network traffic within the cluster.
✔  kubectl get netpol

👉 Persistent Volumes (PVs): Kubernetes are storage resources that provide durable and independent storage for applications. PVs enable data persistence and can be dynamically provisioned or statically allocated within the cluster.
✔  kubectl get pv

👉 Persistent Volume Claims : (PVCs) in Kubernetes are requests made by applications for storage resources. PVCs provide a convenient abstraction layer, allowing applications to request and access persistent storage without directly dealing with specific PVs.
✔  kubectl get pvc

👉 Service Accounts: in Kubernetes are used to provide an identity and access control for pods within the cluster.
✔  kubectl get sa

👉 Storage Classes : in Kubernees are used to dynamically provision different types of storage volumes based on predefined 
✔  kubectl get sc


Common #Kubernetes pod-related errors and ways to mitigate them ☸

▶ ImagePullBackOff
When K8's is unable to retrieve the image for one of the pod's container
There are 3 common causes:
✔ Invalid image name
✔ Non-existent tag specified for the image
✔ Attempting to retrieve an image from a private registry without proper credentials
To resolve the first two cases, correct the image name and tag and for 3rd add the credentials for the private registry to a Secret and reference it in the pods.

▶ RunContainerError
Occurs when the container fails to start before the application
Common causes include:
✔ Mounting a read-only volume as read-write
✔ Mounting a non-existent volume, such as ConfigMap or Secrets
More detailed information can be obtained by describing the "failed" pod.

▶ CrashLoopBackOff
If a container fails to start, Kubernetes displays the CrashLoopBackOff status message
Possible reasons:
✔ An error within the application preventing it from starting
✔ Misconfiguration of the container
✔ The Liveness probe failing multiple times

▶ Pending Pods
If pods remain in a pending state, assuming the scheduler is functioning properly, the following may be causing it:
✔ Insufficient cluster resources, such as CPU and memory, to run the pod
✔ The current namespace has a ResourceQuota object, and creating the pod would exceed the quota
✔ The pod is associated with a pending PersistentVolumeClaim
To investigate these issues, it is recommended to examine the Events section in the output of "kubectl describe" command.
